# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  email: String!
  username: String!
  role: UserRole!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""Les r√¥les possibles pour un utilisateur"""
enum UserRole {
  ADMIN
  USER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthResponse {
  access_token: String!
  user: User!
}

type Document {
  id: ID!
  title: String!
  description: String!
  fileUrl: String
  userId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  result: String!
  documents: [Document!]!
  getDocumentsByUser(userId: String!): [Document!]!
  getDocumentById(id: String!): Document
  me: User!
  users: [User!]!
  user(id: String!): User
}

type Mutation {
  createDocument(createDocumentInput: CreateDocumentInput!): Document!
  updateDocument(id: String!, updateDocumentInput: UpdateDocumentInput!): Document
  deleteDocument(id: String!): Boolean!
  login(loginInput: LoginInput!): AuthResponse!
  register(registerInput: RegisterInput!): AuthResponse!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): User
  deleteUser(id: String!): Boolean!
}

input CreateDocumentInput {
  title: String!
  description: String!
  fileUrl: String
  userId: String
}

input UpdateDocumentInput {
  title: String
  description: String
  fileUrl: String
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  email: String!
  username: String!
  password: String!
  role: UserRole! = USER
}

input CreateUserInput {
  email: String!
  username: String!
  role: UserRole! = USER
}

input UpdateUserInput {
  email: String
  username: String
  role: UserRole
}